# name: CI

# on: [push, workflow_dispatch]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Create downloads directory
#       run: mkdir -p ~/downloads

#     - name: Download ngrok
#       run: wget -O ~/downloads/ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.zip

#     - name: Extract ngrok
#       run: |
#         unzip ~/downloads/ngrok.zip -d ~/downloads
#         chmod +x ~/downloads/ngrok

#     - name: Download ffmpeg
#       run: wget -O ~/downloads/ffmpeg.zip https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip

#     - name: Extract ffmpeg
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y unzip
#         unzip ~/downloads/ffmpeg.zip -d ~/downloads/ffmpeg

#     - name: Download yt-dlp
#       run: |
#         wget -O ~/downloads/yt-dlp https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_linux
#         chmod +x ~/downloads/yt-dlp

#     - name: Install RDP and enable remote desktop
#       run: |
#         sudo apt-get install -y xrdp xfce4 xfce4-goodies
#         sudo systemctl enable xrdp
#         echo "xfce4-session" > ~/.xsession
#         sudo service xrdp start

#     - name: Set password for runner user
#       run: echo "runner:YourSecurePassword123!" | sudo chpasswd

#     - name: Add runner to ssl-cert group
#       run: sudo adduser runner ssl-cert

#     - name: Auth with ngrok
#       run: ~/downloads/ngrok authtoken $NGROK_AUTH_TOKEN
#       env:
#         NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

#     - name: Create tunnel
#       run: nohup ~/downloads/ngrok tcp 3389 &



name: CI

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Create downloads directory
      run: New-Item -ItemType Directory -Force -Path C:\downloads
    
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile C:\downloads\ngrok.zip
   
    - name: Extract ngrok
      run: Expand-Archive -Path C:\downloads\ngrok.zip -DestinationPath C:\downloads\ngrok
    
    - name: Download ffmpeg
      run: Invoke-WebRequest https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip -OutFile C:\downloads\ffmpeg.zip
  
    - name: Extract ffmpeg
      run: Expand-Archive -Path C:\downloads\ffmpeg.zip -DestinationPath C:\downloads\ffmpeg
    
    - name: Download yt-dlp
      run: Invoke-WebRequest https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe -OutFile C:\downloads\yt-dlp.exe
    
    - name: Auth
      run: C:\downloads\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
    
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "Aym@nS23d" -Force)
    
    - name: Create Tunnel
      run: C:\downloads\ngrok\ngrok.exe tcp 3389
